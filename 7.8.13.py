"""–ö–ª–∞—Å—Å—ã Lecture –∏ Conferenceüå∂Ô∏èüå∂Ô∏è
1. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Lecture, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç—Ä–∏
–∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

topic ‚Äî —Ç–µ–º–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è
start_time ‚Äî –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
duration ‚Äî –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
2. –¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Conference, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é, –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å—é –≤ –æ–¥–∏–Ω –¥–µ–Ω—å. –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç
—Å–æ–±–æ–π –Ω–∞–±–æ—Ä –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

–ö–ª–∞—Å—Å Conference –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —á–µ—Ç—ã—Ä–µ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

add() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è—é—â–∏–π –µ–≥–æ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é. –ï—Å–ª–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ
–ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –¥—Ä—É–≥–∏–º–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ValueError —Å —Ç–µ–∫—Å—Ç–æ–º:
–ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
total() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Å—É–º–º–∞—Ä–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
longest_lecture() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–º–æ–≥–æ –¥–æ–ª–≥–æ–≥–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ
HH:MM
longest_break() ‚Äî –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–º–æ–≥–æ –¥–æ–ª–≥–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ –º–µ–∂–¥—É –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ –≤–∏–¥–µ
—Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü–µ—Ä–µ—Ä—ã–≤ –º–µ–∂–¥—É –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–≤—ã–º. –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –æ–¥–Ω–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è,
–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ 12:00, –∞ –¥—Ä—É–≥–æ–µ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –≤ 12:00.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã
–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–π –∫–ª–∞—Å—Å–æ–≤ –Ω–µ—Ç, –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º–∏."""


class Lecture:
    def __init__(self, topic, start_time, duration):
        self.topic = topic
        self.start_time = self.convert_min(start_time)
        self.duration = self.convert_min(duration)
        self.end_time = self.start_time+self.duration

    @staticmethod
    def convert_min(time):
        hours,minute = map(int, time.split(':'))
        return hours*60+minute

    def __str__(self):
        return f'{self.topic},({self.start_time//60:02}:{self.start_time%60:02}), ({self.end_time//60:02}:{self.end_time%60:02})'


class Conference:
    def __init__(self):
        self.conf = []

    def add(self, event: Lecture):
        if self.conf:
            for existing_lecture in self.conf:
                if event.start_time < existing_lecture.start_time + existing_lecture.duration and existing_lecture.start_time < event.start_time + event.duration:
                    raise ValueError ('–ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ')
        self.conf.append(event)
        self.conf.sort(key=lambda x: x.start_time)

    def longest_lecture(self):
        max_lec = max(self.conf, key=lambda x: x.duration)
        return f'{max_lec.duration//60:02}:{max_lec.duration%60:02}'

    def longest_break(self):
        res = []
        for index, event in enumerate(self.conf[:-1]):
            next = self.conf[index + 1]
            res += [next.start_time-event.end_time]
        br = max(res, default=0)
        return f'{br//60:02}:{br%60:02}'

    def total(self):
        total = sum([event.duration for event in self.conf])
        return f'{total//60:02}:{total%60:02}'

    def __iter__(self):
        return iter(self.conf)


# Sample Input 1:
#
# conference = Conference()
#
# conference.add(Lecture('–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞', '08:00', '01:30'))
# conference.add(Lecture('–ñ–∏–∑–Ω—å –ø–æ—Å–ª–µ ChatGPT', '10:00', '02:00'))
# conference.add(Lecture('–ú—É—Ä–∞–≤—å–∏–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º', '13:30', '01:50'))
# print(conference.total())
# print(conference.longest_lecture())
# print(conference.longest_break())
# Sample Output 1:
#
# 05:20
# 02:00
# 01:30
# Sample Input 2:
#
# conference = Conference()
# conference.add(Lecture('–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞', '08:00', '01:30'))
#
# try:
#     conference.add(Lecture('–ñ–∏–∑–Ω—å –ø–æ—Å–ª–µ ChatGPT', '09:00', '02:00'))
# except ValueError as error:
#     print(error)
# Sample Output 2:
#
# –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ
# Sample Input 3:
#
# conference = Conference()
# conference.add(Lecture('–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞', '08:00', '01:00'))
# conference.add(Lecture('–ñ–∏–∑–Ω—å –ø–æ—Å–ª–µ ChatGPT', '11:00', '02:00'))
#
# try:
#     conference.add(Lecture('–ú—É—Ä–∞–≤—å–∏–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º', '10:00', '04:00'))
# except ValueError as error:
#     print(error)
# Sample Output 3:
#
# –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ