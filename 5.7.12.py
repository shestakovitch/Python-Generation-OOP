"""–ö–ª–∞—Å—Å RomanNumeralüå∂Ô∏èüå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å RomanNumeral, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —á–∏—Å–ª–æ –≤ —Ä–∏–º—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω
–ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

number ‚Äî —á–∏—Å–ª–æ –≤ —Ä–∏–º—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä, IV
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:

<—á–∏—Å–ª–æ –≤ —Ä–∏–º—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è>
–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ç–∏–ø—É int, –ø—Ä–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–∏ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –µ–≥–æ
–∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–æ–ª–∂–Ω–æ —è–≤–ª—è—Ç—å—Å—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç.

–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ ==, !=,
>, <, >=, <=.

–ù–∞–∫–æ–Ω–µ—Ü, —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é
–æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ + –∏ - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ:

—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–ª–æ–∂–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å—É–º–º—É –∏—Å—Ö–æ–¥–Ω—ã—Ö
—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—á–∏—Ç–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ä–∞–∑–Ω–æ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω—ã—Ö
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏–∑ —Ä–∏–º—Å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤—Å–µ–≥–¥–∞ –≤—ã—á–∏—Ç–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –º–µ–Ω—å—à–µ–µ —Ä–∏–º—Å–∫–æ–µ —á–∏—Å–ª–æ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Ä–∏–º—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É NotImplemented —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤ –º–µ—Ç–æ–¥–∞—Ö, —Ä–µ–∞–ª–∏–∑—É—é—â–∏—Ö
–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ç–∏–ø–æ–≤ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ RomanNumeral –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π."""


from functools import total_ordering


@total_ordering
class RomanNumeral:
    def __init__(self, number):
        self.number = number

    def __repr__(self):
        return self.number

    def __int__(self):
        return RomanNumeral.roman_to_arabic(self.number)

    def __eq__(self, other):
        if isinstance(other, RomanNumeral):
            return self.__int__() == other.__int__()
        return NotImplemented

    def __gt__(self, other):
        if isinstance(other, RomanNumeral):
            return RomanNumeral.roman_to_arabic(self.number) > RomanNumeral.roman_to_arabic(other.number)
        return NotImplemented

    def __add__(self, other):
        if isinstance(other, RomanNumeral):
            return RomanNumeral(RomanNumeral.arabic_to_roman(int(self) + int(other)))
        return NotImplemented

    def __sub__(self, other):
        if isinstance(other, RomanNumeral):
            return RomanNumeral(RomanNumeral.arabic_to_roman(int(self) - int(other)))
        return NotImplemented

    @staticmethod
    def roman_to_arabic(number):
        roman = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        summ = 0
        for i in range(len(number) - 1, -1, -1):
            num = roman[number[i]]
            if 3 * num < summ:
                summ -= num
            else:
                summ += num
        return summ

    @staticmethod
    def arabic_to_roman(number):
        arabic = {1: 'I', 4: 'IV', 5: 'V', 9: 'IX', 10: 'X', 40: 'XL', 50: 'L', 90: 'XC', 100: 'C', 400: 'CD',
                  500: 'D', 900: 'CM', 1000: 'M'}
        result = ''
        for n in (1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1):
            while n <= number:
                result += arabic[n]
                number -= n
        return result


# Sample Input 1:
#
# number = RomanNumeral('IV') + RomanNumeral('VIII')
#
# print(number)
# print(int(number))
# Sample Output 1:
#
# XII
# 12
# Sample Input 2:
#
# number = RomanNumeral('X') - RomanNumeral('VI')
#
# print(number)
# print(int(number))
# Sample Output 2:
#
# IV
# 4
# Sample Input 3:
#
# a = RomanNumeral('X')
# b = RomanNumeral('XII')
#
# print(a == b)
# print(a > b)
# print(a < b)
# print(a >= b)
# print(a <= b)
# Sample Output 3:
#
# False
# False
# True
# False
# True